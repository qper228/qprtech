<?php

namespace app\models\db;

use app\models\abstractions\AbstractImageModel;
use Yii;
use yii\base\InvalidArgumentException;


/**
 * This is the model class for table "users".
 *
 * @property int $id
 * @property string $username
 * @property string $email
 * @property string $password
 * @property string $authKey
 * @property string $accessToken
 * @property string $firstName
 * @property string $lastName
 * @property string $avatar
 * @property int $isAdmin
 */
class UserDAO extends AbstractImageModel {
    public $newPassword;
    public $repeatNewPassword;
    protected $imageAttrName = 'avatar';
    protected $path = 'img/users/';

    public static function tableName()
    {
        return 'users';
    }

    public function rules()
    {
        return [
            [['email'], 'required', 'on' => ['create', 'update']],
            ['newPassword', 'required', 'on' => 'create'],
            [['isAdmin'], 'integer'],
            [['username', 'email', 'accessToken', 'avatar'], 'string', 'max' => 128],
            [['firstName', 'lastName'], 'string', 'max' => 64],
            [['password', 'authKey'], 'string', 'max' => 256],
            [['newPassword', 'repeatNewPassword'], 'string', 'max' => 64, 'min' => 8],
            ['newPassword', 'compare', 'compareAttribute' => 'repeatNewPassword', 'operator' => '==']
        ];
    }

    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'username' => 'Username',
            'email' => 'Email',
            'password' => 'Password',
            'authKey' => 'Auth Key',
            'accessToken' => 'Access Token',
            'isAdmin' => 'Is Admin',
            'newPassword' => 'Password',
            'repeatNewPassword' => 'Repeat password',
            'file' => 'Avatar'
        ];
    }

    public function beforeSave($insert) {
        if ($this->isNewRecord) {
            $this->authKey = md5("$this->email:$this->password");
            $this->accessToken = hash('sha256', $this->authKey);
            $this->password = hash('sha256', $this->password);
        }
        if ($this->newPassword) $this->password = hash('sha256', $this->newPassword);
        $this->username = $this->email;
        return parent::beforeSave($insert);
    }

    public function afterSave($insert, $changedAttributes)
    {
        $auth = Yii::$app->authManager;
        $role = $auth->getRole('admin');
        if ($this->isAdmin) {
            try {
                $auth->assign($role, $this->id);
            } catch (InvalidArgumentException $ex) {

            }
        } else {
            $auth->revoke($role, $this->id);
        }
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }
}
